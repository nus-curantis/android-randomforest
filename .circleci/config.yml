# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Set up CodeClimate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run Tests
          command: |
            ./gradlew lint test
            sudo docker-php-ext-enable xdebug
          # notify Code Climate of a pending test report using `before-build`
            ./cc-test-reporter before-build
            sudo vendor/bin/phpunit --coverage-clover clover.xml
          # upload test report to Code Climate using `after-build`
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results

# Use a package of configuration called an orb, see https://circleci.com/docs/2.0/orb-intro/
# orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.3.1

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
# workflows:
  # Name the workflow "Welcome"
  # Welcome:
    # Run the welcome/run job in its own container
    # jobs:
      # - welcome/run
